<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.4.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-07-02T23:05:49-04:00</updated><id>http://localhost:4000/</id><title type="html">blog@hisayo</title><subtitle>A cat with wet paws.
</subtitle><entry><title type="html">Week 3-4</title><link href="http://localhost:4000/outreachy/2017/07/02/week-3-and-4.html" rel="alternate" type="text/html" title="Week 3-4" /><published>2017-07-02T00:00:00-04:00</published><updated>2017-07-02T00:00:00-04:00</updated><id>http://localhost:4000/outreachy/2017/07/02/week-3-and-4</id><content type="html" xml:base="http://localhost:4000/outreachy/2017/07/02/week-3-and-4.html">&lt;p&gt;One third of the internship is already passed! It was a packed 2 weeks. We finally started to write code, and it is exciting. We spend a fair amount of time thinking though the foundation of this project before we start to building things. As my previous post, we made design principles. In the week 2, we started to draft user flow.&lt;/p&gt;

&lt;h2&gt;User flow: First draft&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/img/user_flow.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;From the drafting of the first draft, it became clear that it makes sense to have PlanningAlerts to be the entry point to the contribution of suggested councilor data.  We decided to focus on the part of the contributor’s flow as the first iteration, and looked more closely in the potential entry points in the PlanningAlerts.&lt;/p&gt;

&lt;h2&gt;Entry points&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/img/entry_points_chart2.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Once we decided to focus on the contributor side of the user flow, we created a chart of potential entry points in the PlanningAlerts.  I went though the process of signing up for email alerts, commenting on proposal on PlanningAlerts numbers of times to tune into the user’s state of mind. From the chart, we picked top 3 entry points, and moved on to the development of the first iteration. I do not have background in UX design, and this was my first experience of drafting user flow and entry points&lt;/p&gt;

&lt;h2&gt;First iteration milestone&lt;/h2&gt;

&lt;p&gt;As we focused on the contributor side of the user flow first, we are taking “wizard of OZ” approach; having the interface for the users first, then manually inputing the data we received in the existing system that feeds data to PlanningAlerts. In this way, it is more work for administrators, yet we will be able to receive feedback of the UX from users side without building entire thing.
&lt;a href=&quot;https://github.com/openaustralia/planningalerts/milestone/7&quot;&gt;And here is our milestone.&lt;/a&gt; &lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Make sure people know which council they’re adding councilors to when they’re contributing&lt;/li&gt;
  &lt;li&gt;Add feature flag for the councilor info contribution feature&lt;/li&gt;
  &lt;li&gt;Councillor info contributor privydes their details so the admin can contact them about their contribution and thank them&lt;/li&gt;
  &lt;li&gt;Help people collect councilor information by provident them some instructions on where to get it&lt;/li&gt;
  &lt;li&gt;When someone contributes councilor information thank them and provide an experience that fits our principles&lt;/li&gt;
  &lt;li&gt;Let me add all the councilors for an authority in one contribution&lt;/li&gt;
  &lt;li&gt;Add basic styles to the councilor contribution form&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So far we are about 30% done, and aiming to achieve the milestone by the end of June.&lt;/p&gt;

&lt;h2&gt;What I’ve learned through the process&lt;/h2&gt;

&lt;h3&gt;Computational Thinking (again)&lt;/h3&gt;

&lt;p&gt;When I was drafting the userflow, what I spent the a lot of time was breaking down everything in small and clear steps. At this point, I am very certain that computational thinking will be have a key presence in every aspect of development, and amazed how it extends beyond just coding.  Rather, I am realizing that coding (or good coding) can happen because everything else is thought through, broken down to single issues, and mapped out clearly. I came to understand being agile better because I came to understand the context where the good code can be written.&lt;/p&gt;

&lt;h3&gt;Coming to understand what it’s like being agile and why it’s important&lt;/h3&gt;

&lt;p&gt;I see the word “Agile” pretty much anywhere when I see job postings for coding jobs (Continuous shipping, readjustment, short phases of work etc. ). It makes sense to wanting to be flexible, but I was not paying attention to why it needs to be so emphasized till it manifests in the context of a real life project.&lt;/p&gt;
&lt;p&gt;When we want to achieve an user-centric design, user-feedback is crucial in the development process, and we have to create the development flow that enable taking in constant user feedback. When we center that taking in a lot of user feedback fast, it significantly affects the way we work. We have to consciously create a workflow that is open, flexible and adaptive to change.  Some of the points being agile are:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;in the existing flow if we made one new component, the flow still works&lt;/li&gt;
  &lt;li&gt;and the components are reusable, and immediately useful&lt;/li&gt;
  &lt;li&gt;reuse things that already exist&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In short, yes, Agile makes so much sense to get user feedback fast , and enable the user-centric design. To meet our design principle, agile is the way to go. Although it maybe different in a bigger team of developers, I am learning that creating an application involves a lot more than just writing code. I am learning agile as a way to create a condition for good code to be written.&lt;/p&gt;

&lt;h3&gt;Empathy is a big skill for Developer&lt;/h3&gt;
&lt;p&gt;I’ve been thinking about what entails to be agile, and I am certain empathy plays critical role. I am very fortunate to learn it as a positive reflection, because I know it is rare.&lt;/p&gt;
&lt;p&gt;Empathy plays out in two folds: empathy towards users as community member, and empathy among coworkers. Being able to tune in to user’s needs, circumstances, and feelings are important to create technology that truly benefit all community members.&lt;/p&gt;
&lt;p&gt;And for a team of developers, empathy is a glue to connect us in the way we can function well to be agile. It’s so much easier to work with this team in spite of the time difference coordination, and maximize my learning. Luke and Henare both are very encouraging, supportive, communicative, and great at holding space for me to learn. Before I started this internship, I witnessed and experienced a lot of shaming associated to coding.&lt;/p&gt;
&lt;p&gt;When I was in just learning to code, even though it was my choice,  I felt I know nothing and hated myself for it. It felt like I am a failure, and felt ashamed of it. I was encouraged to ask questions, but after a few times of being shamed for asking questions, I spent more energy finding who I can ask questions than actually asking questions. The fear of being shamed and undermined can move people, but it only goes so far. And most certainly, the fear cannot force us to be empathetic.&lt;/p&gt;
&lt;p&gt;Now I still feel like I know nothing, and I know it’s true. Even though that makes me frustrated but I can also feel the excitement of learning new things. And that makes me want to learn more. When we want to achieve what we hold as a goal, the fastest way to get there is tune in out empathy.  Being empathetic is a conscious decision. When being agile is described as “being flexible, adaptive, fast turnover of short phases” etc.,  I think it’s important to state empathy as a foundational value and tangible skill to make agile possible.&lt;/p&gt;

&lt;h3&gt;Test Driven Development&lt;/h3&gt;

&lt;p&gt;I was always afraid of writing tests, and this past 2 weeks changed how I see test 180 degree.
In the first issue I worked on, I spent a long time thinking what exactly the issue I have to work on. I drafted some user flows, associations, and ended up creating a model that was not really necessarily.  The first things I should have done was to read the test written for the issue and run the test. So it will fails and the error messages will guide me to what to write. And that came to me as such a shock because I rarely wrote test before, and it really changed my way of approaching development.&lt;/p&gt;
&lt;p&gt;In the past project, writing code is an agonizing process. It’s feels like facing a blank canvas and not knowing what to draw or where to start. I always respected people who can write code from scratch, and wondered how am I suppose to just magically know what to write. TDD demystified the process. Although writing test first felt counter intuitive, when we think test as a way to communicate the shared vision and goal, test becomes a powerful tool.&lt;/p&gt;

&lt;p&gt;When conceptual thought move towards practical implementation, not limited to coding, it always feels like to me a pivot of a twisted textile.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/time.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;The pivot is the moment of transformation that the same idea changes the way of manifestation. For me, test in development is the pivot. It reminds me of translation (Japanese is my mother tongue, and I learned English as an adult). In Japanese we traditionally write vertically, and there is a moment in translation, I feel physically picking up the line and laying it down to be horizontal, like how English is written.
I remember when I felt that link, it is one of the moments I felt like I understand translation better.&lt;/p&gt;
&lt;p&gt;I think test is the link between ideas and implementation, and when I realize that, coding came to seem less scary because there is a test to guide me. Good test communicate the idea of the feature it testing clearly. And there is a feature that looks impossible to write a test for, then it is probably a bad implementation of the idea.&lt;/p&gt;
&lt;p&gt;It is a bit premature to say test is my new best friend, but I want to know it better. Now, one of my tangible goals in this internship is to familiarize myself in test and be able to write better tests.&lt;/p&gt;

&lt;h2&gt;Conclusion, and a bit more thoughts&lt;/h2&gt;

&lt;p&gt;I am learning a lot and it is exciting. It feels good to be coding, and now I know that development involves so much more than just coding. I am glad to know the processs, so I can acknowledge and appreciate the labor put into to create a condition to code.&lt;/p&gt;
&lt;p&gt;We are almost done of the first iteration, and will have a phase of user feedback. I’m excited to hear what user thinks, and so grateful that we can have this process!&lt;/p&gt;
&lt;p&gt;All of these tools are very exciting to learn. Although I cannot stop wondering, with all these amazing tools, why tech industry is still struggling to make itself a better place? ( I mean, I think I know why, but asking as a rhetoric). By better, I mean a place to cerebrate the difference and diversity -not in the cherry picking curation of diversity™  way, but truly open, shared, nurturing way. Because everything I have learned in this internship points me to that we already have tools to learn from each other, being adoptive and change ourselves to be better to each other. Why can’t we think about using these amazing tools to improve our environment, lift each other up? I will keep thinking about this, and I would love to connect with people who are working to make tech industry and community more inclusive, welcoming and nurturing place. &lt;/p&gt;</content><author><name></name></author><summary type="html">One third of the internship is already passed! It was a packed 2 weeks. We finally started to write code, and it is exciting. We spend a fair amount of time thinking though the foundation of this project before we start to building things. As my previous post, we made design principles. In the week 2, we started to draft user flow.</summary></entry><entry><title type="html">Week 1 and 2</title><link href="http://localhost:4000/outreachy/2017/06/14/week-1-and-2.html" rel="alternate" type="text/html" title="Week 1 and 2" /><published>2017-06-14T00:00:00-04:00</published><updated>2017-06-14T00:00:00-04:00</updated><id>http://localhost:4000/outreachy/2017/06/14/week-1-and-2</id><content type="html" xml:base="http://localhost:4000/outreachy/2017/06/14/week-1-and-2.html">&lt;h2&gt;The First Day&lt;/h2&gt;
&lt;p&gt;May 30th, 2017 was the first day of my Outreachy internship with OpenAustralia Foundation. I started by having a video chat meeting with my mentors Luke and Henare, which we mostly spent getting to know each other, then I spent the following day prepping for the official kick-off meeting on day three.&lt;/p&gt;

&lt;h2&gt;The Project&lt;/h2&gt;
&lt;p&gt;Local Councillors Project (suggestions for a cooler name are welcome) is the project I will be working on for the next three months. This project is closely related to &lt;a href=&quot;https://www.planningalerts.org.au/&quot;&gt;PlanningAlerts&lt;/a&gt;, which is an app that allows people to sign up for email notifications when there are new development applications in the area of their concern. Through PlanningAlerts users can also communicate with local councillors about these development proposals. Information about the local councillors is currently imported from a public spreadsheet that gets maintained  by dedicated volunteers. The issue in current system is that in order for PlanningAlerts to import this local councillor data, it first needs to be converted from CVS to JSON, which requires someone to run a rake task from the terminal. This is not an easy task for volunteers who may not have programming knowledge, and is a lot to ask on top of their work gathering local councillor information that is scattered in all over the internet. That’s where the Local Councillors Project comes in. We want to create a system that makes it easier and more accessible for people to contribute data, so that other apps like PlanningAlerts can access the data of Local Councillors.&lt;/p&gt;

&lt;p&gt;In the kick-off meeting we mapped out issues, solutions, and design principles. This is a new process for me, and was a very interesting and meaningful experience to take part in. &lt;a href=&quot;https://github.com/openaustralia/australian_local_councillors_popolo/issues/98&quot;&gt;Here&lt;/a&gt; is what we came up with:&lt;p /&gt;

&lt;h3&gt;The Problem&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;PlanningAlerts needs data about local councillors so people can write to them concerning development proposals.&lt;/li&gt; &lt;li&gt;PlanningAlerts covers 150 local councils.&lt;/li&gt;
  &lt;li&gt;The councillors data changes periodically and irregularly and it needs to be updated manually by someone.&lt;/li&gt;
  &lt;li&gt;The OpenAustralia Foundation team does not have the capacity to keep it up to date themselves.&lt;/li&gt;
  &lt;li&gt;The current system requires a lot of programming knowledge to contribute the data. People don’t even know they can update the data.&lt;/li&gt;
  &lt;li&gt;Very few people are able to make contribution, and so very few people do.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;We know we will have solved the problem when...&lt;/h3&gt;

&lt;p&gt;PlanningAlerts has up-to-date councillor information for every authority it covers. This information is updated by the contributions of volunteers. We have an accessible, easy (and fun) system to update/add councillor information that acknowledges and celebrates the work of the volunteers.&lt;/p&gt;

&lt;h3&gt;Design Principles&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Strive for diversifying data: invite people who are historically marginalized and excluded from conversations around technology and information, and intentionally build data structures that reflect those voices and lived experiences. The effort of achieving diversity needs to happen from multiple angles.&lt;/li&gt;
  &lt;li&gt;Make sure contributors understand the amazing impact they’re having.&lt;/li&gt;
  &lt;li&gt;Strive for universal accessibility.&lt;/li&gt;
  &lt;li&gt;Make the process of contribution obvious and intuitive.&lt;/li&gt;
  &lt;li&gt;Communicate clearly how people’s contributions are used.&lt;/li&gt;
  &lt;li&gt;Be welcoming for both new and existing contributors. Do adequate outreach as well as decreasing the barriers for new contributors.&lt;/li&gt;
  &lt;li&gt;Be supportive: people need to feel supported and encouraged in their process of contributing.&lt;/li&gt;
  &lt;li&gt;Share ownership: make sure people know they are a part of the community. Honour their labour and make sure they are able to receive the benefits.&lt;/li&gt;
  &lt;li&gt;Respect everyone’s time, including administrators.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;How we work&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Be agile, flexible, and responsive: decide on a small feature, implement, debug, repeat.&lt;/li&gt;
  &lt;li&gt;Communicate changes to people as they come up.&lt;/li&gt;
  &lt;li&gt;In case of conflict, return to the shared goal of the project and the problems we want to solve.&lt;/li&gt;
  &lt;li&gt;Reflect on what your beef is and where it’s coming from (maybe it’s not about the project).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;What I’ve Learned Through the Process&lt;/h2&gt;

&lt;p&gt;I come from a background in community organizing, art-based education and facilitation, which makes it a big leap for me to be a developer.  It is certainly very different, but through this process I could find some similarities between these different types of work. So I am writing this section to reflect, learn and digest in my own way.
Two things I found difficult and valuable to learn were 1) how to break down a big issue into a set of small issues that deal with one thing at a time and 2) categorizing what goes where.&lt;/p&gt;

&lt;h3&gt;Breaking Down Complex Issues&lt;/h3&gt;

&lt;p&gt;When we were nailing down the problem, one thing I found unfamiliar, challenging, and refreshing was compartmentalizing a big problem to a set of individual issues.&lt;/p&gt;
&lt;p&gt;In the past the way I worked as a facilitator was closer to creating an unordered list as opposed to an ordered list. As a facilitator I was trained to focus on the interconnection of issues and the dynamics among them rather than considering single issues in isolation. I can see both approaches are relevant in different contexts, but it took me a while to wrap my head around, and it still takes time for me to break things down to single issues.&lt;/p&gt;

&lt;h3&gt;Categorizing the Planning Process&lt;/h3&gt;

&lt;p&gt;This is related to breaking down a big problem into a set of small single issues.  When we were creating the design principles for this project, I was constantly conflating design principles and solutions. Design principles should act as a bridge between a problem and a solution, so they are connected yet not the same thing. Again this challenge was rooted in breaking down the complicated process of planning a project that aims to solve a complex problem.&lt;p&gt;
&lt;p&gt;The “How We Work” section was originally part of my draft for the project’s design principles.  My mentors’ feedback was that these points wouldn’t traditionally be categorized design principles since they are more about how we run the project, and less about guiding design decisions within the project. However, we all agreed that it was important to document these ideas somewhere, which lead to the introduction of a “How We Work” section&lt;/p&gt;
&lt;p&gt;Both cases were great practice with applying computational thinking in real life scenarios. It helped me connect what I already know to this big new tech project.&lt;/p&gt;

&lt;h3&gt;Design Principles as a Collective Agreement&lt;/h3&gt;

&lt;p&gt;Before the kick-off meeting, Luke gave me a whole bunch of readings about design principles. Since I chose this project in the internship application, I was familiar with the issue we want to solve and had an abstract understanding of the solution (i.e. to build an app). But I never really knew what “design principles&quot; meant in this context, and I had assumed it was probably about graphic design and the aesthetics of the project, but it turned out to be about design in a much bigger sense: how to communicate with users, and how to reach the goal of the project.&lt;p&gt;
&lt;p&gt;I’ve come to understand design principles as something similar to the idea of a collective agreement that I’m familiar with through my background in workshop facilitation A collective agreement is something that all workshop participants and facilitators create together at the very beginning of a workshop. It is a set of agreements designed to maximize the participants’ learning in the space and collectively move towards their goals. Some questions to ask when developing a collective agreement are:&lt;/p&gt;

 &lt;ul&gt;
   &lt;li&gt;What makes you feel safe(r)?&lt;/li&gt;
   &lt;li&gt;What makes you feel respected and heard?&lt;/li&gt;
   &lt;li&gt;What makes you feel encouraged to be explore your vulnerability and take risks?&lt;/li&gt;
   &lt;li&gt;and more&lt;/li&gt;
 &lt;/ul&gt;

&lt;p&gt;And some of the actual agreements to respond to those questions are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Speak on your behalf (use “I” statements).&lt;/li&gt;
  &lt;li&gt;It is ok to feel uncomfortable.&lt;/li&gt;
  &lt;li&gt; One diva, one mic (one person speaks at one time with no interruptions).&lt;/li&gt;
  &lt;li&gt; Respect people’s gender pronouns.&lt;/li&gt;
  &lt;li&gt; Apologize and do better if you make mistakes.&lt;/li&gt;
  &lt;li&gt; and more&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Learning is often times rocky, and there are moments we feel lost, sidetracked, misunderstood, and divided. But we need those moments to actually learn. A collective agreement is something to come back to in those moments, to help people remember their common ground and build from there each time.&lt;/p&gt;

&lt;h3&gt;Power Imbalance&lt;/h3&gt;

&lt;p&gt;Some of the issues we want to address in this project include:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The current system requires a lot of programming knowledge to contribute the data. People don’t even know they can update the data.&lt;/li&gt;
  &lt;li&gt;Very few people are able to make contribution, and so very few people do.&lt;/li&gt;
&lt;/ul&gt;
  &lt;p&gt;Those points indicate the barrier for the participation in civic tech and civic participation in city planning. To challenge that, we are trying to make civic participation easier and more accessible. So we need to center users by asking about their experiences, where they are coming from and what their needs are.&lt;/p&gt;


&lt;p&gt;This is similar to what a facilitator should do in a group session: strive to be instrumental in centering participants’ needs to feel safe to express their ideas, feelings, and concerns, and to explore those together.&lt;/p&gt;
&lt;p&gt;As much as a facilitator should be instrumental, it is important to remember they are a part of the group together, and everybody is sharing the process. It is convenient to believe facilitators are purely instrumental. However, a facilitator holds unique power, and have to try hard to minimize the hierarchy of power that exists between them and participants. Pretending like it doesn’t exist gives facilitators power they don’t have to be accountable for. Similarly, when it comes to the data that drives PlanningAlerts, people with programming knowledge hold the power. I want this project to reduce the division that power creates between people with programming knowledge and those without.  &lt;/p&gt;

&lt;h3&gt;Why does it matter &lt;i&gt;how&lt;/i&gt; we build, not only &lt;i&gt;what&lt;/i&gt; we build? &lt;/h3&gt;

&lt;p&gt;Since we are building things to make civic participation more accessible, it is important to acknowledge we are also participants in civic tech, and how we treat each other matters. We worship efficiency so much, and end up building something great but with a terrible process.  This could include a lack of transparency, bad communication, dismissing the safety or violating the privacy of users and workers. Can we still create something great if our process is terrible? Probably we can. But if what we want to achieve through this project or through the civic tech movement overall is to empower &lt;i&gt;all&lt;/i&gt; people through technology, it defeats the purpose. Especially once our design principles say:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;Strive for diversifying data: invite people who are historically marginalized and excluded from conversations around technology and information, and intentionally build data structures that reflect those voices and lived experiences.&lt;/li&gt;
&lt;/ul&gt;

 &lt;p&gt;How we build matters as much as what we build, because the process of building is already a part of diversifying data.&lt;/p&gt;

&lt;h2&gt;In Conclusion&lt;/h2&gt;

&lt;p&gt;I’m so proud of our design principles! Also it has been pretty useful guide for us.  
My next post, which I should be writing already, will be about diagramming our user flow and solution design.  
Anyhow, that’s it for now!&lt;/p&gt;
&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">The First Day May 30th, 2017 was the first day of my Outreachy internship with OpenAustralia Foundation. I started by having a video chat meeting with my mentors Luke and Henare, which we mostly spent getting to know each other, then I spent the following day prepping for the official kick-off meeting on day three.</summary></entry><entry><title type="html">Hello World!</title><link href="http://localhost:4000/outreachy/2017/05/17/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Hello World!" /><published>2017-05-17T15:00:53-04:00</published><updated>2017-05-17T15:00:53-04:00</updated><id>http://localhost:4000/outreachy/2017/05/17/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/outreachy/2017/05/17/welcome-to-jekyll.html">&lt;p&gt;I am starting this blog as a part my Outreachy internship! I will be writing
about my thoughts, process, challenges, feelings(of course) and coding
adventures!
Hopefully the writing habit stick beyond this program.&lt;/p&gt;</content><author><name></name></author><summary type="html">I am starting this blog as a part my Outreachy internship! I will be writing about my thoughts, process, challenges, feelings(of course) and coding adventures! Hopefully the writing habit stick beyond this program.</summary></entry></feed>